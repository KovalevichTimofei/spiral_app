{"version":3,"sources":["components/AppBars/PrimaryBar.jsx","components/Menus/AppMenu.jsx","components/AppBars/BottomBar.jsx","components/Cards/Base.jsx","components/Cards/GivingCard.jsx","components/pages/HomePage.jsx","containers/pages/HomePageContainer.jsx","components/pages/AccountsPage.jsx","containers/pages/AccountsPageContainer.jsx","index.js","containers/PrimaryLayout.jsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","zIndex","modal","menuButton","marginRight","spacing","title","textAlign","avatar","border","MenuAppBar","props","classes","isOpen","openChange","openCloseSideMenu","useCallback","react_default","a","createElement","AppBar","position","className","Toolbar","IconButton","edge","onClick","color","aria-label","Menu_default","Typography","variant","Avatar","alt","src","defaultProps","list","marginTop","listItemIcon","drawerContainer","overflow","paper","Object","defineProperty","backgroundColor","palette","primary","main","breakpoints","down","width","AppMenu","closeMenu","listItems","name","icon","HelpOutline_default","Notifications_default","DirectionsWalk_default","Gavel_default","List","map","_ref","ListItem","button","key","ListItemIcon","ListItemText","Drawer","open","onClose","borderTop","concat","grey","left","bottom","right","paddingBottom","overflowX","justifyContent","divider","BottomBar","history","useHistory","pathname","useLocation","handleClick","str","push","emptyFunction","Home_default","value","AccountBox_default","PanTool_default","MonetizationOn_default","CreditCard_default","BottomNavigation","showLabels","item","BottomNavigationAction","label","marginBottom","headerWhite","headerMagenta","headerGreen","darkSeaGreen","red","actions","borderRadius","textTransform","HEADERS_TYPES","GIVING","FINANCIALS","EVENTS","CardBase","type","subtitle","media","children","supportText","buttons","btnColor","Card","CardHeader","subheader","clsx","CardContent","CardActions","Button","header","mediaImage","height","paddingTop","mediaVideo","GivingCard","mediaPart","component","CardMedia","image","allowFullScreen","content","overflowY","HomePage","cards","cardsInfo","card","Container","HomePageContainer","AccountsPage","AccountsPageContainer","createMuiTheme","secondary","darkMintGreen","blueGrey","brownishGrey","typography","fontSizes","text14","text16","text18","text22","text24","text32","ReactDOM","render","ThemeProvider","react_router_dom","react_router","path","_useState","useState","_useState2","slicedToArray","setOpen","Fragment","to","document","getElementById"],"mappings":"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","file":"static/js/main.d9a437e9.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        zIndex: theme.zIndex.modal + 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        flexGrow: 1,\r\n    },\r\n    avatar: {\r\n        border: 'solid 1px white',\r\n    },\r\n}));\r\n\r\nMenuAppBar.defaultProps = {\r\n    isOpen: false,\r\n    openChange: () => {},\r\n};\r\n\r\nMenuAppBar.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    openChange: PropTypes.func,\r\n};\r\n\r\nexport default function MenuAppBar(props) {\r\n    const classes = useStyles();\r\n    const { isOpen, openChange } = props;\r\n\r\n    const openCloseSideMenu = useCallback(() => openChange(!isOpen), [isOpen]);\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.root}>\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} onClick={openCloseSideMenu} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>Logo</Typography>\r\n                <Avatar alt=\"avatar\" src=\"img/avatar.jpg\" classes={{ root: classes.avatar }} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport GavelIcon from '@material-ui/icons/Gavel';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        marginTop: theme.spacing(8),\r\n    },\r\n    listItemIcon: {\r\n        color: 'white',\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: 'white',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '80%',\r\n        },\r\n    },\r\n}));\r\n\r\nAppMenu.defaultProps = {\r\n    isOpen: false,\r\n    openChange: () => {},\r\n};\r\n\r\nAppMenu.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    openChange: PropTypes.func,\r\n};\r\n\r\nexport default function AppMenu(props) {\r\n    const classes = useStyles();\r\n    const { isOpen, openChange } = props;\r\n\r\n    const closeMenu = useCallback(() => openChange(false), []);\r\n\r\n    const listItems = [\r\n        { name: 'Help and support', icon: <HelpOutlineIcon /> },\r\n        { name: 'Alert settings', icon: <NotificationsIcon /> },\r\n        { name: 'Accessibility', icon: <DirectionsWalkIcon /> },\r\n        { name: 'Policies and Terms', icon: <GavelIcon /> },\r\n    ];\r\n\r\n    const list = (\r\n        <List className={classes.list}>\r\n            {listItems.map(({ name, icon }) => (\r\n                <ListItem button key={name}>\r\n                    <ListItemIcon className={classes.listItemIcon}>{icon}</ListItemIcon>\r\n                    <ListItemText primary={name} />\r\n                </ListItem>\r\n            ))}\r\n        </List>\r\n    );\r\n\r\n    return (\r\n        <Drawer open={isOpen} onClose={closeMenu} classes={{ paper: classes.paper }}>\r\n            {list}\r\n        </Drawer>\r\n    );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport PanToolIcon from '@material-ui/icons/PanTool';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        borderTop: `1px solid ${theme.palette.grey[300]}`,\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        width: '100%',\r\n        paddingBottom: '30px',\r\n        overflowX: 'scroll',\r\n        backgroundColor: theme.palette.grey[100],\r\n        [theme.breakpoints.down('xs')]: {\r\n            justifyContent: 'inherit',\r\n        },\r\n    },\r\n    divider: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport default function BottomBar() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { pathname } = location;\r\n\r\n    function handleClick(str) {\r\n        history.push(str);\r\n    }\r\n\r\n    const emptyFunction = useCallback(() => {}, []); // FIXME: temprorary dummy function for non-existing pages\r\n\r\n    const listItems = [\r\n        {\r\n            name: 'Home', icon: <HomeIcon />, onClick: useCallback(() => handleClick('/home'), []), value: '/home',\r\n        },\r\n        {\r\n            name: 'Accounts', icon: <AccountBoxIcon />, onClick: useCallback(() => handleClick('/accounts'), []), value: '/accounts',\r\n        },\r\n        { name: 'Giving', icon: <PanToolIcon />, onClick: emptyFunction },\r\n        { name: 'Payments', icon: <MonetizationOnIcon />, onClick: emptyFunction },\r\n        { name: 'Credits', icon: <CreditCardIcon />, onClick: emptyFunction },\r\n    ];\r\n\r\n    return (\r\n        <BottomNavigation\r\n            showLabels\r\n            value={pathname}\r\n            className={classes.root}\r\n        >\r\n            {listItems.map(item => (\r\n                <BottomNavigationAction\r\n                    key={item.name}\r\n                    label={item.name}\r\n                    icon={item.icon}\r\n                    value={item.value}\r\n                    className={classes.button}\r\n                    onClick={item.onClick}\r\n                />\r\n            ))}\r\n        </BottomNavigation>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginBottom: '20px',\r\n    },\r\n    headerWhite: {\r\n        backgroundColor: 'white',\r\n    },\r\n    headerMagenta: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: 'white',\r\n    },\r\n    headerGreen: {\r\n        backgroundColor: theme.palette.darkSeaGreen.main,\r\n        color: 'white',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n    actions: {\r\n        justifyContent: 'center',\r\n        paddingBottom: theme.spacing(3),\r\n    },\r\n    button: {\r\n        borderRadius: theme.spacing(3),\r\n        textTransform: 'none',\r\n    },\r\n}));\r\n\r\nconst HEADERS_TYPES = {\r\n    GIVING: 'giving',\r\n    FINANCIALS: 'financials',\r\n    EVENTS: 'events',\r\n};\r\n\r\nCardBase.defaultProps = {\r\n    type: null,\r\n    title: null,\r\n    subtitle: null,\r\n    avatar: null,\r\n    media: null,\r\n    supportText: null,\r\n    buttons: null,\r\n};\r\n\r\nCardBase.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    media: PropTypes.object,\r\n    supportText: PropTypes.string,\r\n    buttons: PropTypes.array,\r\n};\r\n\r\nexport default function CardBase(props) {\r\n    const classes = useStyles();\r\n    const { GIVING, FINANCIALS, EVENTS } = HEADERS_TYPES;\r\n    const {\r\n        type, title, subtitle, avatar, media, children, supportText, buttons,\r\n    } = props;\r\n\r\n    const btnColor = type === EVENTS ? 'darkSeaGreen' : 'primary';\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n\r\n            {type !== 'account' ? (\r\n                <CardHeader\r\n                    avatar={<Avatar alt=\"avatar\" src={avatar} classes={{ root: classes.avatar }} />}\r\n                    title={title}\r\n                    subheader={subtitle}\r\n                    className={clsx({\r\n                        headerWhite: type === GIVING,\r\n                        headerMagenta: type === FINANCIALS,\r\n                        headerGreen: type === EVENTS,\r\n                    })}\r\n                />\r\n            ) : null}\r\n\r\n            {media}\r\n\r\n            {children ? (\r\n                <CardContent>\r\n                    {children}\r\n                </CardContent>\r\n            ) : null}\r\n\r\n            {supportText ? (\r\n                <CardContent>\r\n                    <Typography>\r\n                        {supportText}\r\n                    </Typography>\r\n                </CardContent>\r\n            ) : null}\r\n\r\n            {buttons ? (\r\n                <CardActions className={classes.actions}>\r\n                    {buttons.map(button => (\r\n                        <Button key={button.label} className={classes.button} variant=\"outlined\" color={btnColor}>\r\n                            {button.label}\r\n                        </Button>\r\n                    ))}\r\n                </CardActions>\r\n            ) : null}\r\n\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport Base from './Base';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    header: {\r\n        backgroundColor: 'white',\r\n    },\r\n    mediaImage: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    mediaVideo: {\r\n        height: '306px',\r\n    },\r\n}));\r\n\r\nGivingCard.defaultProps = {\r\n    title: null,\r\n    subtitle: null,\r\n    avatar: null,\r\n    media: null,\r\n    supportText: null,\r\n    buttons: null,\r\n};\r\n\r\nGivingCard.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    media: PropTypes.object,\r\n    supportText: PropTypes.string,\r\n    buttons: PropTypes.array,\r\n};\r\n\r\nexport default function GivingCard(props) {\r\n    const classes = useStyles();\r\n    const {\r\n        title, subtitle, avatar, media, supportText, buttons,\r\n    } = props;\r\n\r\n    const mediaPart = media.component === 'img' ? (\r\n        <CardMedia\r\n            className={classes.mediaImage}\r\n            image={media.image}\r\n            alt={media.alt}\r\n        />\r\n    ) : (\r\n        <CardMedia\r\n            className={classes.mediaVideo}\r\n            component={media.component}\r\n            src={media.src}\r\n            allowFullScreen\r\n        />\r\n    );\r\n\r\n    return (\r\n        <Base\r\n            type=\"giving\"\r\n            title={title}\r\n            subtitle={subtitle}\r\n            avatar={avatar}\r\n            media={mediaPart}\r\n            supportText={supportText}\r\n            buttons={buttons}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport GivingCard from '../Cards/GivingCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    content: {\r\n        position: 'fixed',\r\n        paddingTop: theme.spacing(9),\r\n        paddingBottom: theme.spacing(11),\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: '100%',\r\n        overflowY: 'scroll',\r\n    },\r\n}));\r\n\r\nexport default function HomePage() {\r\n    const classes = useStyles();\r\n\r\n    const cards = cardsInfo.map((card) => {\r\n        const {\r\n            key, title, subtitle, avatar, media, supportText, buttons,\r\n        } = card;\r\n\r\n        switch (card.type) {\r\n            case 'giving':\r\n                return (\r\n                    <GivingCard\r\n                        key={key}\r\n                        title={title}\r\n                        subtitle={subtitle}\r\n                        avatar={avatar}\r\n                        media={media}\r\n                        supportText={supportText}\r\n                        buttons={buttons}\r\n                    />\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Container className={classes.content}>\r\n            {cards}\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst cardsInfo = [\r\n    {\r\n        key: 'card1',\r\n        type: 'giving',\r\n        title: 'ST Jude',\r\n        subtitle: 'Your giving impact',\r\n        media: {\r\n            component: 'img',\r\n            image: 'img/avatar.jpg',\r\n            alt: 'There should be image here',\r\n        },\r\n        supportText: 'Danny, Your donation heiped four amazing kids got much-needed cancer surgery, thanks for being amazing!',\r\n        buttons: [\r\n            { label: 'Share to spread the word' },\r\n        ],\r\n    },\r\n    {\r\n        key: 'card2',\r\n        type: 'giving',\r\n        title: 'ST Jude',\r\n        subtitle: 'Your giving impact',\r\n        avatar: 'img/avatar.jpg',\r\n        media: {\r\n            component: 'iframe',\r\n            width: '1280',\r\n            height: '720',\r\n            src: 'https://www.youtube.com/embed/qmp2ukmxqmc',\r\n        },\r\n        supportText: 'Danny, Your donation heiped four amazing kids got much-needed cancer surgery, thanks for being amazing!',\r\n        buttons: [\r\n            { label: 'Share to spread the word' },\r\n        ],\r\n    },\r\n];\r\n","import React from 'react';\n\nimport HomePage from '../../components/pages/HomePage';\n\n/* This component is a prototype for component-container.\nThere will be redux, router and sime business logic here */\n\nexport default function HomePageContainer() {\n    return (\n        <HomePage />\n    );\n}\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    content: {\r\n        paddingTop: theme.spacing(7),\r\n    },\r\n}));\r\n\r\nexport default function AccountsPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.content}>Account page</div>\r\n    );\r\n}\r\n","import React from 'react';\n\nimport AccountsPage from '../../components/pages/AccountsPage';\n\n/* This component is a prototype for component-container.\nThere will be redux, router and sime business logic here */\n\nexport default function AccountsPageContainer() {\n    return (\n        <AccountsPage />\n    );\n}\n","/* eslint-disable react/jsx-filename-extension */\nimport 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport PrimaryLayout from './containers/PrimaryLayout';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: { main: 'rgb(216, 50, 117)' },\n        secondary: { main: 'rgb(51, 56, 61)' },\n        darkSeaGreen: { main: 'rgb(14, 153, 77)' },\n        darkMintGreen: { main: 'rgb(28, 189, 102)' },\n        blueGrey: { main: 'rgb(141, 149, 157)' },\n        brownishGrey: { main: 'rgb(110, 110, 110)' },\n    },\n    typography: {\n        fontSizes: {\n            text14: '14px',\n            text16: '16px',\n            text18: '18px',\n            text22: '22px',\n            text24: '24px',\n            text32: '32px',\n        },\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <Router>\n            <Switch>\n                <Route path=\"/\" component={PrimaryLayout} />\n            </Switch>\n        </Router>\n    </ThemeProvider>, document.getElementById('root'),\n);\n","import React, { useState, useCallback } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport TopBar from '../components/AppBars/PrimaryBar';\nimport AppMenu from '../components/Menus/AppMenu';\nimport BottomBar from '../components/AppBars/BottomBar';\n\nimport HomePage from './pages/HomePageContainer';\nimport AccountsPage from './pages/AccountsPageContainer';\n\nexport default function PrimaryLayout() {\n    const [isOpen, setOpen] = useState(false);\n    const openChange = useCallback(value => setOpen(value));\n\n    return (\n        <>\n            <TopBar isOpen={isOpen} openChange={openChange} />\n            <AppMenu isOpen={isOpen} openChange={openChange} />\n            <Switch>\n                <Route path=\"/home\" component={HomePage} />\n                <Route path=\"/accounts\" component={AccountsPage} />\n                <Redirect to=\"/home\" />\n            </Switch>\n            <BottomBar />\n        </>\n    );\n}\n"],"sourceRoot":""}